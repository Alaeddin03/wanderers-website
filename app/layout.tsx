import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Guide } from "@/types/guide";
import Sidebar from "@/components/Sidebar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let guides: Guide[] = [];

  try {
    const response = await fetch("http://localhost:3000/api/guides", {
      next: { revalidate: 86400 }, // Cache for 1 day: 60s * 60m * 24h
    });

    if (!response.ok) {
      throw new Error("Failed to fetch guides");
    }

    guides = await response.json();
  } catch (error) {
    console.error("Error loading guides:", error);
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Sidebar guides={guides} />
        {children}
      </body>
    </html>
  );
}
